/*
 * This file is generated by jOOQ.
 */
package net.lavedrine.jooq.generated.tables.records;


import net.lavedrine.jooq.generated.tables.JCategory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.category.id</code>.
     */
    public CategoryRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.category.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.category.parent_id</code>.
     */
    public CategoryRecord setParentId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.category.parent_id</code>.
     */
    public Integer getParentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.category.name</code>.
     */
    public CategoryRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.category.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.category.description</code>.
     */
    public CategoryRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.category.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JCategory.CATEGORY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return JCategory.CATEGORY.PARENT_ID;
    }

    @Override
    public Field<String> field3() {
        return JCategory.CATEGORY.NAME;
    }

    @Override
    public Field<String> field4() {
        return JCategory.CATEGORY.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getParentId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getParentId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public CategoryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CategoryRecord value2(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public CategoryRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CategoryRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CategoryRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(JCategory.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(Integer id, Integer parentId, String name, String description) {
        super(JCategory.CATEGORY);

        setId(id);
        setParentId(parentId);
        setName(name);
        setDescription(description);
    }
}
