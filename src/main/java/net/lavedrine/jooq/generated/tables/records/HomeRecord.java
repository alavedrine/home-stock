/*
 * This file is generated by jOOQ.
 */
package net.lavedrine.jooq.generated.tables.records;


import java.time.Instant;

import net.lavedrine.jooq.generated.tables.JHome;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HomeRecord extends UpdatableRecordImpl<HomeRecord> implements Record4<Integer, String, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.home.id</code>.
     */
    public HomeRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.home.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.home.name</code>.
     */
    public HomeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.home.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.home.date_created</code>.
     */
    public HomeRecord setDateCreated(Instant value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.home.date_created</code>.
     */
    public Instant getDateCreated() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>public.home.last_updated</code>.
     */
    public HomeRecord setLastUpdated(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.home.last_updated</code>.
     */
    public Instant getLastUpdated() {
        return (Instant) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Instant, Instant> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Instant, Instant> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JHome.HOME.ID;
    }

    @Override
    public Field<String> field2() {
        return JHome.HOME.NAME;
    }

    @Override
    public Field<Instant> field3() {
        return JHome.HOME.DATE_CREATED;
    }

    @Override
    public Field<Instant> field4() {
        return JHome.HOME.LAST_UPDATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Instant component3() {
        return getDateCreated();
    }

    @Override
    public Instant component4() {
        return getLastUpdated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Instant value3() {
        return getDateCreated();
    }

    @Override
    public Instant value4() {
        return getLastUpdated();
    }

    @Override
    public HomeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public HomeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public HomeRecord value3(Instant value) {
        setDateCreated(value);
        return this;
    }

    @Override
    public HomeRecord value4(Instant value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public HomeRecord values(Integer value1, String value2, Instant value3, Instant value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HomeRecord
     */
    public HomeRecord() {
        super(JHome.HOME);
    }

    /**
     * Create a detached, initialised HomeRecord
     */
    public HomeRecord(Integer id, String name, Instant dateCreated, Instant lastUpdated) {
        super(JHome.HOME);

        setId(id);
        setName(name);
        setDateCreated(dateCreated);
        setLastUpdated(lastUpdated);
    }
}
